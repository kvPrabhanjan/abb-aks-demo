name: Deploy to AKS

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/aks-store-demo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Gether Service Images
      id: set-variables
      run: |
        echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> "$GITHUB_OUTPUT"
        echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # - name: Log in to Azure
    #   uses: azure/login@v1
    #   with:
    #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
    #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
    #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    #     client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group rg-aks-store  --name aks-aksstore --overwrite-existing

    - uses: azure/setup-kubectl@v3
      name: Setup kubectl

    - name: Setup kubelogin
      uses: azure/use-kubelogin@v1
      with:
        kubelogin-version: 'v0.0.26'

    - name: Set AKS context
      id: set-context
      uses: azure/aks-set-context@v3
      with:
        resource-group: 'rg-aks-store'
        cluster-name: 'aks-aksstore'
        admin: 'false'
        use-kubelogin: 'true'
    
    - name: Run kubectl
      run: |
        kubectl get pods

    - name: Deploy using Helm
      run: |
        helm upgrade --install aks-store-demo ./charts/aks-store-demo \
          --namespace aks-store \
          --create-namespace 
