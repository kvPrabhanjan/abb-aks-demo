name: Deploy to AKS

on:
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/aks-store-demo
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Gether Service Images
      id: set-variables
      run: |
        echo "REPOSITORY=ghcr.io/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"
        echo "IMAGE-AI-SERVICE=ai-service" >> "$GITHUB_OUTPUT"
        echo "IMAGE-MAKELINE-SERVICE=makeline-service" >> "$GITHUB_OUTPUT"
        echo "IMAGE-ORDER-SERVICE=order-service" >> "$GITHUB_OUTPUT"
        echo "IMAGE-PRODUCT-SERVICE=product-service" >> "$GITHUB_OUTPUT"
        echo "IMAGE-STORE-ADMIN-SERVICE=store-admin" >> "$GITHUB_OUTPUT"
        echo "IMAGE-STORE-FRONT-SERVICE=store-front" >> "$GITHUB_OUTPUT"
        echo "IMAGE-VIRTUAL-CUSTOMER=virtual-customer" >> "$GITHUB_OUTPUT"
        echo "IMAGE-VIRTUAL-WORKER=virtual-worker" >> "$GITHUB_OUTPUT"
        echo "VERSION=$(echo ${GITHUB_SHA} | cut -c1-7)" >> "$GITHUB_OUTPUT"
        echo "CREATED=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> "$GITHUB_OUTPUT"

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1 
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - name: Get AKS credentials
      run: |
        az aks get-credentials --resource-group rg-aks-store  --name aks-aksstore --overwrite-existing

    - name: Deploy using Helm
      run: |
        helm upgrade --install aks-store-demo ./charts/aks-store-demo \
          --namespace aks-store \
          --create-namespace 
